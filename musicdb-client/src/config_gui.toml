font = ''

[text]
# define the text displayed in the application.
# escape sequences:
# \t: song title
# \a: album name
# \A: artist name
# \s1.0;: set the scale (to the default: 1.0)
# \h1.0;: set the height-alignment (to the default: 1.0 / align text to be on one baseline)
# \cRRGGBB: set color to this hex value.
# \cFFFFFF: default color (white)
# \<char>: <char> (\\ => \, \# => #, \% => %, ...)
# custom properties:
# %<mode><search text>%
# %_word% returns the first property that includes "word"
# %>Year=% returns the end of the first property that starts with "Year=",
#          so if a song has "Year=2019", this would return "2019".
# %=Value% returns something if a property "Value" is found.
# IF:
# ?<condition>#<then>#<else>#
# If <condition> is not empty, the entire block will be replaced by the value generated by <then>.
# If <condition> is empty, the entire block will be replaced by the value generated by <else>.
# Examples:
# ?\A#by \A##
# If we know the artist's name, write "by " followed by the name,
# if not, don't write anything (## -> <else> is empty)
# ?\t#\t#(no title found)#
# If we know the title, write it. If not, write "(no title found)" instead.

status_bar = '''\t
\s0.5;?\A#\c505050by \c593D6E\A##?\a#?\A# ##\c505050on \c264524\a##\c808080?%>Year=%# (%>Year=%)## | \d'''

idle_top = '\t'

idle_side1 = '''?\A#\c505050by \c593D6E\A##
?\a#\c505050on \c264524\a##'''
idle_side2 = ''' 
\c505050\d 
%>Year=% 
%>Genre=% '''
